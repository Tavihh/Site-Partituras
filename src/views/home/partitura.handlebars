<link rel="stylesheet" href="/css/home/partitura.css">
<script src="https://unpkg.com/opensheetmusicdisplay@1.4.1/build/opensheetmusicdisplay.min.js"></script>
<div class="dados-partitura">
    <div class="dados">
        <h2>{{musica.nome}}</h2>
        <small>{{musica.genero.nome}}</small>
        <hr>
    </div>

    {{!-- <p>{{musica.instrumento.nome}}</p> --}}

    <select name="instrumento" id="instrumento" onchange="location.href=this.value">
        {{#each instrumentos}}
        <option value="/partitura/{{../musica.id}}/versao/{{id}}" {{#if selected}} selected {{/if}} >{{nome}}</option>
        {{/each}}
    </select>


    <div id="osmd-container"></div>
</div>

<div class="partitura-controles">
    <div>
        <audio controls>
            <source src="/server-files/musicas/{{musica.pathMP3}}" type="audio/mpeg">
        </audio>
        <a href="/server-files/musicas/{{musica.pathMP3}}" download="{{musica.nome}} - {{musica.instrumento.nome}}">
            <img src="/imgs/icons/donwload.png" alt="">
        </a>
    </div>
    <div>
        <a href="/server-files/musicas/{{musica.pathPDF}}" download="{{musica.nome}} - {{musica.instrumento.nome}}">Partitura - PDF</a>
        <a href="/server-files/musicas/{{musica.pathMXL}}" download="{{musica.nome}} - {{musica.instrumento.nome}}.musicxml">Partitura - MXL</a>
    </div>
</div>

<hr>
{{>_sectionPartituras}}


<script>
    async function loadMusicXML(pathMXL) {
        const MXL = '/server-files/'+ pathMXL
        console.log(MXL)
        const response = await fetch(MXL); // Busca o arquivo na pasta p√∫blica
        const xmlText = await response.text();


        const osmd = new opensheetmusicdisplay.OpenSheetMusicDisplay("osmd-container", {
            // drawingParameters: "compacttight",
            autoResize: true, // Ajusta automaticamente ao redimensionar a tela
            drawTitle: false, // Exibe o t√≠tulo da partitura
            drawComposer: false, // Exibe o nome do compositor
            drawLyricist: false, // Exibe o letrista
            drawPartNames: false, // Exibe os Instrumentos
            drawSlurs: true, // Exibe ligaduras
            drawLyrics: false, // Mostra letras da m√∫sica      
        });
    
        await osmd.load(xmlText);
        // üìå Definir escala e espa√ßamento ANTES de renderizar
        osmd.zoom = 0.7;  // Equivalente ao antigo "scale"
        osmd.rules.SpacingBetweenNotesFactor = 0.5; // Equivalente ao antigo "spacingFactor"

        osmd.render();
    }

window.onload = function () {
    loadMusicXML("{{musica.pathMXL}}");
}

window.ResizeObserver = function () {
    loadMusicXML("{{musica.pathMXL}}");
}

const logo1 = document.getElementsByClassName('logo1')[0]
const logo2 = document.getElementsByClassName('logo2')[0]

logo1.addEventListener('click', function(){loadMusicXML("{{musica.pathMXL}}")})
logo2.addEventListener('click', function(){loadMusicXML("{{musica.pathMXL}}")})
</script>
